"use strict"

const { tag, end, leaf, renderTo } = require ('./tagscript')
const tab = (n) => new Array (n+1) .join ('\t')
const log = console.log.bind (console)

class Page {
  
  constructor (title = 'Untitled', body) {
    this.title = title
    this.scripts = []
    this.styles = []
    this.body = arguments.length > 1 ? body : _body (title)
  }
  
  withScript (script) {
    this.scripts.push (script)
    return this
  }

  withStyle (sheet) {
    this.styles.push (sheet)
    return this
  }

  withBody (body = []) {
    this.body = body
    return this
  }
  
  renderTo (out) {
    return renderTo (out, this)
  }
  
  [Symbol.iterator] () {
    return _tagStream (this)
  }

}

function* _tagStream (page) {
  yield [ tag ('html'), '\n' ]
  yield head (page)
  yield page.body
  yield [ '\n', end ('html'), '\n' ]
}

function head (page) {
  return [
    tab(1), tag ('head'), '\n',
    tab(2), tag ('title'), page.title, end ('title'), '\n',
    page.styles.map (style),
    page.scripts.map (script),
    tab(1), end ('head'), '\n'
  ]
}

function style (href) {
  return [tab(2), tag ('link', { rel:'stylesheet', type:'text/css', href:href }), '\n']
}

function script (src) {
  return [tab(2), tag ('script', { src:src }), end ('script'), '\n']
}

function _body (title) {
  return [
    tab(1), tag ('body'), '\n',
    tab(2), tag ('h1'), title, end ('h1'), '\n',
    tab(1), end ('body')
  ]
}

module.exports = { Page }